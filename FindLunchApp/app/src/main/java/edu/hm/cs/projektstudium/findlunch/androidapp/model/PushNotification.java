package edu.hm.cs.projektstudium.findlunch.androidapp.model;

import com.fasterxml.jackson.annotation.JsonProperty;

import java.util.List;

import edu.hm.cs.projektstudium.findlunch.androidapp.model.DayOfWeek;
import edu.hm.cs.projektstudium.findlunch.androidapp.model.KitchenType;
import edu.hm.cs.projektstudium.findlunch.androidapp.model.User;


/**
 * Represents an PushNotification-entry in the Database.
 * Keeps SNS and FCM token for push messaging service.
 *
 * Extended by Maxmilian Haag on 05.12.2016.
 */

public class PushNotification{

    public int getId() {
        return id;
    }

    /**
     * Id of the push-notification
     */
    private int id;

    /**
     * The SNS/ADM Token generated by
     * the App and stored in it's properties.
     * Used by Amazon to identify the
     * recipient of the push-notifications.
     */
    @JsonProperty
    private String snsToken;

    /**
     * The FCM Token generated by
     * the App and stored in it's properties.
     * Used by Google to identify the
     * recipient of the push-notifications.
     */
    @JsonProperty
    private String fcmToken;

    /**
     * Title of the push-notification
     */
    @JsonProperty
    private String title;

    public String getTitle() {
        return title;
    }

    /**
     * Latitude of the location for
     * Push-Notifications
     */
    @JsonProperty
    private float latitude;

    /**
     * Longitude of the location for
     * push-notifications
     */
    @JsonProperty
    private float longitude;

    /**
     * Radius (in meters) around the location
     * (for push-notifications)
     */
    @JsonProperty
    private int radius;

    /**
     * The User who want to receive the
     * push-notifications
     */
    @JsonProperty
    private User user;

    public List<DayOfWeek> getDayOfWeeks() {
        return dayOfWeeks;
    }

    /**
     * Weekdays on which Push-Notifications
     * shall be sent
     */
    @JsonProperty
    private List<DayOfWeek> dayOfWeeks;

    public List<KitchenType> getKitchenTypes() {
        return kitchenTypes;
    }

    /**
     * KitchenTypes for which Push-Notifications
     * shall be sent
     */
    @JsonProperty
    private List<KitchenType> kitchenTypes;

    /**
     * Generates a new PushNotification Object.
     * @param fcmToken FCM Token generated by the App
     * @param snsToken SNS Token generated by the App
     * @param latitude Latitude of the location
     * @param longitude Longitude of the location
     * @param radius Radius (in meters) around the location
     * @param user User who want to receive the push-notifications
     * @param dayOfWeeks Weekdays on which Push-Notifications shall be sent
     * @param kitchenTypes KitchenTypes for which Push-Notifications shall be sent
     */
    public PushNotification(String fcmToken, String snsToken, String title, float latitude, float longitude, int radius, User user, List<DayOfWeek> dayOfWeeks, List<KitchenType> kitchenTypes) {
        this.fcmToken = fcmToken;
        this.snsToken = snsToken;
        this.title = title;
        this.latitude = latitude;
        this.longitude = longitude;
        this.radius = radius;
        this.user = user;
        this.dayOfWeeks = dayOfWeeks;
        this.kitchenTypes = kitchenTypes;
    }

    //Required! See errors http://www.baeldung.com/jackson-exception
    public PushNotification() {
    }

}